const { createClient } = require('@supabase/supabase-js');

const supabaseUrl = 'https://jpkzzovrrjrtchfdxdce.supabase.co';
const supabaseKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Impwa3p6b3ZycmpydGNoZmR4ZGNlIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTQxMzExODUsImV4cCI6MjA2OTcwNzE4NX0.AZ-o5950oVgxUVHhX82RmHH8-FwNNg8hjtGl6vKen_w';
const supabase = createClient(supabaseUrl, supabaseKey);

console.log('üîç ============ ‡∏•‡∏ö‡∏£‡∏π‡∏õ‡∏ã‡πâ‡∏≥ ============');
console.log('');

async function removeDuplicates() {
  console.log('üîç ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏´‡∏≤‡∏£‡∏π‡∏õ‡∏ã‡πâ‡∏≥...');
  
  // ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
  const { data: allImages, error } = await supabase
    .from('portfolio_images')
    .select('id, image_url, created_at')
    .order('created_at', { ascending: true });
    
  if (error) {
    console.log('‚ùå ‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î:', error.message);
    return;
  }
  
  console.log(`üìä ‡∏û‡∏ö‡∏£‡∏π‡∏õ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î: ${allImages.length} ‡∏£‡∏π‡∏õ`);
  
  // ‡∏´‡∏≤‡∏£‡∏π‡∏õ‡∏ã‡πâ‡∏≥
  const seenUrls = new Set();
  const duplicates = [];
  
  for (const image of allImages) {
    if (seenUrls.has(image.image_url)) {
      duplicates.push(image);
    } else {
      seenUrls.add(image.image_url);
    }
  }
  
  if (duplicates.length === 0) {
    console.log('‚úÖ ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏£‡∏π‡∏õ‡∏ã‡πâ‡∏≥!');
    return;
  }
  
  console.log(`üéØ ‡∏û‡∏ö‡∏£‡∏π‡∏õ‡∏ã‡πâ‡∏≥: ${duplicates.length} ‡∏£‡∏π‡∏õ`);
  console.log('');
  
  // ‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏£‡∏π‡∏õ‡∏ã‡πâ‡∏≥
  for (const dup of duplicates.slice(0, 10)) { // ‡πÅ‡∏™‡∏î‡∏á 10 ‡∏£‡∏π‡∏õ‡πÅ‡∏£‡∏Å
    console.log(`  üóëÔ∏è  ${dup.image_url}`);
  }
  
  if (duplicates.length > 10) {
    console.log(`  ... ‡πÅ‡∏•‡∏∞‡∏≠‡∏µ‡∏Å ${duplicates.length - 10} ‡∏£‡∏π‡∏õ`);
  }
  
  console.log('');
  console.log('‚ö†Ô∏è  ‡∏à‡∏∞‡∏•‡∏ö‡∏£‡∏π‡∏õ‡∏ã‡πâ‡∏≥‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• (‡πÄ‡∏Å‡πá‡∏ö‡∏£‡∏π‡∏õ‡πÅ‡∏£‡∏Å‡πÑ‡∏ß‡πâ)');
  console.log('üí° ‡∏£‡∏π‡∏õ‡πÉ‡∏ô‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏¢‡∏±‡∏á‡∏≠‡∏¢‡∏π‡πà‡∏Ñ‡∏£‡∏ö ‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏á‡∏ß‡∏•');
  console.log('');
  
  // ‡∏•‡∏ö‡∏£‡∏π‡∏õ‡∏ã‡πâ‡∏≥
  console.log('üóëÔ∏è  ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏•‡∏ö‡∏£‡∏π‡∏õ‡∏ã‡πâ‡∏≥...');
  
  for (const dup of duplicates) {
    const { error: deleteError } = await supabase
      .from('portfolio_images')
      .delete()
      .eq('id', dup.id);
      
    if (deleteError) {
      console.log(`‚ùå ‡∏•‡∏ö‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ: ${dup.image_url}`);
    }
  }
  
  console.log(`‚úÖ ‡∏•‡∏ö‡∏£‡∏π‡∏õ‡∏ã‡πâ‡∏≥‡πÄ‡∏™‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß: ${duplicates.length} ‡∏£‡∏π‡∏õ`);
  
  // ‡πÅ‡∏™‡∏î‡∏á‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥‡πÉ‡∏´‡∏°‡πà
  const { data: finalCount } = await supabase
    .from('portfolio_images')
    .select('id', { count: 'exact' });
    
  console.log(`üìä ‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏£‡∏π‡∏õ‡πÉ‡∏ô‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•: ${finalCount.length} ‡∏£‡∏π‡∏õ`);
}

removeDuplicates().catch(console.error);